AWSTemplateFormatVersion: "2010-09-09"
Description: "(SO0061) - predictive-maintenance-using-machine-learning: Solution permissions stack"
Parameters:
  SolutionPrefix:
    Description: Enter the name of the prefix for the solution used for naming
    Type: String
    Default: "sm-soln-pred-maint"
  SolutionS3BucketName:
    Description: Enter the name of the S3 bucket for the solution
    Type: String
    Default: "sm-soln-*"
  StackVersion:
    Description: |
      CloudFormation Stack version.
      Use 'release' version unless you are customizing the
      CloudFormation templates and solution artifacts.
    Type: String
    Default: release
    AllowedValues:
      - release
      - development

Mappings:
  SolutionsS3BucketName:
    development:
      Prefix: sagemaker-solutions-build
    release:
      Prefix: sagemaker-solutions

Resources:
  NotebookInstanceExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${SolutionPrefix}-${AWS::Region}-nb-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub "arn:aws:iam::${AWS::AccountId}:root"
              Service:
                - sagemaker.amazonaws.com
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: Needs to be explicitly named to tighten launch permissions policy

  NotebookInstanceIAMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${SolutionPrefix}-nb-instance-policy"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:CreateBucket
              - s3:DeleteBucket
              - s3:GetBucketLocation
              - s3:ListBucket
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:ListBucketMultipartUploads
              - s3:AbortMultipartUpload
            Resource:
              - "*"
              - !Sub "arn:aws:s3:::${SolutionS3BucketName}"
              - !Sub "arn:aws:s3:::${SolutionS3BucketName}/*"
              - !Sub
                - "arn:aws:s3:::${SolutionS3Bucket}-${AWS::Region}"
                - SolutionS3Bucket: !FindInMap [SolutionsS3BucketName, !Ref StackVersion, Prefix]
              - !Sub
                - "arn:aws:s3:::${SolutionS3Bucket}-${AWS::Region}/*"
                - SolutionS3Bucket: !FindInMap [SolutionsS3BucketName, !Ref StackVersion, Prefix]
          - Effect: Allow
            Action:
              - sagemaker:CreateTrainingJob
              - sagemaker:DescribeTrainingJob
              - sagemaker:CreateModel
              - sagemaker:DescribeModel
              - sagemaker:DeleteModel
              - sagemaker:DescribeTransformJob
              - sagemaker:CreateTransformJob
            Resource:
              - !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:*"
          - Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:BatchCheckLayerAvailability
            Resource:
              - "*"
              - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/*"
          - Effect: Allow
            Action:
              - ec2:CreateVpcEndpoint
              - ec2:DescribeRouteTables
            Resource: "*"
          - Effect: Allow
            Action:
              - cloudwatch:PutMetricData
              - cloudwatch:GetMetricData
              - cloudwatch:GetMetricStatistics
              - cloudwatch:ListMetrics
            Resource:
              - !Sub "arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:*"
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:DescribeLogStreams
              - logs:GetLogEvents
              - logs:PutLogEvents
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/sagemaker/*"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*"
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource:
              - Fn::GetAtt:
                  - NotebookInstanceExecutionRole
                  - Arn
            Condition:
              StringEquals:
                iam:PassedToService: sagemaker.amazonaws.com
          - Effect: Allow
            Action:
              - iam:GetRole
            Resource:
              - Fn::GetAtt:
                  - NotebookInstanceExecutionRole
                  - Arn
      Roles:
        - Ref: NotebookInstanceExecutionRole
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W12
            reason: This policy needs to have * resource because some of the resources
              are created dynamically and some of its actions are * resource actions

Outputs:
  RoleArn:
    Description: "Execution Role for the solution"
    Value: !GetAtt NotebookInstanceExecutionRole.Arn